1.elf总共分为三个段。

  a.Elf头　相对固定
  b.Program段,
  c.中间txt与data
  d.Session段,包含罗干的Section节点

2.elf段
　a.前４个字节　7f 45 4c 46  固定
  b.第５个字节　01: 32bit  02:64bit
  c.第６个字节　01: 小端   02:大端
  d.第７个字节　01 固定 版本
  e.第８个字节　00 固定　system V/ABI
  f.第9~16字节　00 固定

  g.第17~18字节 e_type  0003 表示带有动态库的可执行程序，或动态库文件
  　　　　　　　 0002 可执行程序
  h.第19~20字节 e_machine 　003e
  i.第21~24字节 e_version 0001 0000 固定为1
  j.第25~32字节 8个字节　为主程序入口
  k.第33~40字节 8个字节  Programe Head的地址
  l.第41~48字节 8个字节  Section　Head的地址
  m.第49~52字节 4个字节  Processor-special flag 固定为0
  n.第53~54字节 2个字节  elf头的长度
  o.第55~56字节 2个字节　每个Programe Head entry的大小
  q.第57~58字节 2个字节  有多少个Programe Head头
  r.第59~60字节 2个字节  每个Section Head entry的大小
  r.第61~62字节 2个字节  有多少个Section Head头
  s.第63~64字节 2个字节  Section Name table索引 

  --------------------------------------------------------------------

ELF file Head
typedef struct
{
	unsigned char e_ident[16]; /* ELF identification */
	Elf64_Half e_type; /* Object file type */
	Elf64_Half e_machine; /* Machine type */
	Elf64_Word e_version; /* Object file version */
	Elf64_Addr e_entry; /* Entry point address */
	Elf64_Off e_phoff; /* Program header offset */
	Elf64_Off e_shoff; /* Section header offset */
	Elf64_Word e_flags; /* Processor-specific flags */
	Elf64_Half e_ehsize; /* ELF header size */
	Elf64_Half e_phentsize; /* Size of program header entry */
	Elf64_Half e_phnum; /* Number of program header entries */
	Elf64_Half e_shentsize; /* Size of section header entry */
	Elf64_Half e_shnum; /* Number of section header entries */
	Elf64_Half e_shstrndx; /* Section name string table index */
} Elf64_Ehdr;

-----------------------------------------------

Program Head
typedef struct
{
	Elf64_Word p_type; /* Type of segment */
	Elf64_Word p_flags; /* Segment attributes */
	Elf64_Off p_offset; /* Offset in file */
	Elf64_Addr p_vaddr; /* Virtual address in memory */
	Elf64_Addr p_paddr; /* Reserved */
	Elf64_Xword p_filesz; /* Size of segment in file */
	Elf64_Xword p_memsz; /* Size of segment in memory */
	Elf64_Xword p_align; /* Alignment of segment */
} Elf64_Phdr;

-----------------------------------------------

Section Head:
typedef struct
{
	Elf64_Word sh_name; /* Section name */
	Elf64_Word sh_type; /* Section type */
	Elf64_Xword sh_flags; /* Section attributes */
	Elf64_Addr sh_addr; /* Virtual address in memory */
	Elf64_Off sh_offset; /* Offset in file */
	Elf64_Xword sh_size; /* Size of section */
	Elf64_Word sh_link; /* Link to other section */
	Elf64_Word sh_info; /* Miscellaneous information */
	Elf64_Xword sh_addralign; /* Address alignment boundary */
	Elf64_Xword sh_entsize; /* Size of entries, if section has table */
} Elf64_Shdr;

  --------------------------------------------------------------------
排序
1.如果是字节为单位的，就需要进行字节的调换
2.如果是两个字节的排序不用调换
3.如果是超过两个字节的那么低双字节在前，高双字节在后

  --------------------------------------------------------------------
各个长度
1. Elf64_Addr		8字节
2. Elf64_Off		8字节
3. Elf64_Half   	2字节
4. Elf64_Word   	4字节
5. Elf64_SWord  	4字节
6. Elf64_XWord  	8字节
7. Elf64_SXWord 	8字节
8. unsinged char 	1字节 
